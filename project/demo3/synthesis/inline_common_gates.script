read_verilog ../demo3/verilog/IllegalOp.v ../demo3/verilog/PCAdder.v ../demo3/verilog/Rti.v ../demo3/verilog/alu.v ../demo3/verilog/aluSrc2.v ../demo3/verilog/barrelShifter2.v ../demo3/verilog/bitflip.v ../demo3/verilog/cache.v ../demo3/verilog/control.v ../demo3/verilog/dMemDump.v ../demo3/verilog/dMemEn.v ../demo3/verilog/dMemWrite.v ../demo3/verilog/decode.v ../demo3/verilog/dff.v ../demo3/verilog/execute.v ../demo3/verilog/fetch.v ../demo3/verilog/final_memory.syn.v ../demo3/verilog/four_bank_mem.v ../demo3/verilog/fsm.v ../demo3/verilog/fullAdder_1b.v ../demo3/verilog/jump.v ../demo3/verilog/memToReg.v ../demo3/verilog/mem_system.v ../demo3/verilog/memc.syn.v ../demo3/verilog/memory.v ../demo3/verilog/memory2c.syn.v ../demo3/verilog/memory2c_align.syn.v ../demo3/verilog/memv.syn.v ../demo3/verilog/mux16_1_16b.v ../demo3/verilog/mux2_1.v ../demo3/verilog/mux2_1_16b.v ../demo3/verilog/mux2_1_2.v ../demo3/verilog/mux2_1_3.v ../demo3/verilog/mux4_1.v ../demo3/verilog/mux4_1_16b.v ../demo3/verilog/mux4_1_4b.v ../demo3/verilog/mux8_1_16b.v ../demo3/verilog/nand2.v ../demo3/verilog/nand3.v ../demo3/verilog/nor2.v ../demo3/verilog/nor3.v ../demo3/verilog/not1.v ../demo3/verilog/pcImm.v ../demo3/verilog/pcSrc.v ../demo3/verilog/proc.v ../demo3/verilog/rca_16b.v ../demo3/verilog/rca_4b.v ../demo3/verilog/regDst.v ../demo3/verilog/regJump.v ../demo3/verilog/regWrite.v ../demo3/verilog/reg_16b.v ../demo3/verilog/reg_1b.v ../demo3/verilog/reg_3b.v ../demo3/verilog/reg_4b.v ../demo3/verilog/rf.v ../demo3/verilog/rf_bypass.v ../demo3/verilog/seSel.v ../demo3/verilog/stallmem.syn.v ../demo3/verilog/writeback.v ../demo3/verilog/xnor5_1.v ;

setattr -mod -set keep_hierarchy 1 IllegalOp PCAdder Rti alu aluSrc2 barrelShifter2 bitflip cache control dMemDump dMemEn dMemWrite decode dff execute fetch final_memory.syn four_bank_mem fsm fullAdder_1b jump memToReg mem_system memc.syn memory memory2c.syn memory2c_align.syn memv.syn mux16_1_16b mux2_1 mux2_1_16b mux2_1_2 mux2_1_3 mux4_1 mux4_1_16b mux4_1_4b mux8_1_16b pcImm pcSrc proc rca_16b rca_4b regDst regJump regWrite reg_16b reg_1b reg_3b reg_4b rf rf_bypass seSel stallmem.syn writeback ;

hierarchy -top IllegalOp ;
proc; opt; fsm; opt; memory; opt;
write_verilog ./verilog/IllegalOp.v ;
 
# hierarchy -top PCAdder ;
# write_verilog ./verilog/PCAdder.v
# 
# hierarchy -top Rti ;
# write_verilog ./verilog/Rti.v
# 
# hierarchy -top alu ;
# write_verilog ./verilog/alu.v
# 
# hierarchy -top aluSrc2 ;
# write_verilog ./verilog/aluSrc2.v
# 
# hierarchy -top barrelShifter2 ;
# write_verilog ./verilog/barrelShifter2.v
# 
# hierarchy -top bitflip ;
# write_verilog ./verilog/bitflip.v
# 
# hierarchy -top cache ;
# write_verilog ./verilog/cache.v
# 
# hierarchy -top control ;
# write_verilog ./verilog/control.v
# 
# hierarchy -top dMemDump ;
# write_verilog ./verilog/dMemDump.v
# 
# hierarchy -top dMemEn ;
# write_verilog ./verilog/dMemEn.v
# 
# hierarchy -top dMemWrite ;
# write_verilog ./verilog/dMemWrite.v
# 
# hierarchy -top decode ;
# write_verilog ./verilog/decode.v
# 
# hierarchy -top dff ;
# write_verilog ./verilog/dff.v
# 
# hierarchy -top execute ;
# write_verilog ./verilog/execute.v
# 
# hierarchy -top fetch ;
# write_verilog ./verilog/fetch.v
# 
# hierarchy -top final_memory.syn ;
# write_verilog ./verilog/final_memory.syn.v
# 
# hierarchy -top four_bank_mem ;
# write_verilog ./verilog/four_bank_mem.v
# 
# hierarchy -top fsm ;
# write_verilog ./verilog/fsm.v
# 
# hierarchy -top fullAdder_1b ;
# write_verilog ./verilog/fullAdder_1b.v
# 
# hierarchy -top jump ;
# write_verilog ./verilog/jump.v
# 
# hierarchy -top memToReg ;
# write_verilog ./verilog/memToReg.v
# 
# hierarchy -top mem_system ;
# write_verilog ./verilog/mem_system.v
# 
# hierarchy -top memc.syn ;
# write_verilog ./verilog/memc.syn.v
# 
# hierarchy -top memory ;
# write_verilog ./verilog/memory.v
# 
# hierarchy -top memory2c.syn ;
# write_verilog ./verilog/memory2c.syn.v
# 
# hierarchy -top memory2c_align.syn ;
# write_verilog ./verilog/memory2c_align.syn.v
# 
# hierarchy -top memv.syn ;
# write_verilog ./verilog/memv.syn.v
# 
# hierarchy -top mux16_1_16b ;
# write_verilog ./verilog/mux16_1_16b.v
# 
# hierarchy -top mux2_1 ;
# write_verilog ./verilog/mux2_1.v
# 
# hierarchy -top mux2_1_16b ;
# write_verilog ./verilog/mux2_1_16b.v
# 
# hierarchy -top mux2_1_2 ;
# write_verilog ./verilog/mux2_1_2.v
# 
# hierarchy -top mux2_1_3 ;
# write_verilog ./verilog/mux2_1_3.v
# 
# hierarchy -top mux4_1 ;
# write_verilog ./verilog/mux4_1.v
# 
# hierarchy -top mux4_1_16b ;
# write_verilog ./verilog/mux4_1_16b.v
# 
# hierarchy -top mux4_1_4b ;
# write_verilog ./verilog/mux4_1_4b.v
# 
# hierarchy -top mux8_1_16b ;
# write_verilog ./verilog/mux8_1_16b.v
# 
# hierarchy -top nand2 ;
# write_verilog ./verilog/nand2.v
# 
# hierarchy -top nand3 ;
# write_verilog ./verilog/nand3.v
# 
# hierarchy -top nor2 ;
# write_verilog ./verilog/nor2.v
# 
# hierarchy -top nor3 ;
# write_verilog ./verilog/nor3.v
# 
# hierarchy -top not1 ;
# write_verilog ./verilog/not1.v
# 
# hierarchy -top pcImm ;
# write_verilog ./verilog/pcImm.v
# 
# hierarchy -top pcSrc ;
# write_verilog ./verilog/pcSrc.v
# 
# hierarchy -top proc ;
# write_verilog ./verilog/proc.v
# 
# hierarchy -top rca_16b ;
# write_verilog ./verilog/rca_16b.v
# 
# hierarchy -top rca_4b ;
# write_verilog ./verilog/rca_4b.v
# 
# hierarchy -top regDst ;
# write_verilog ./verilog/regDst.v
# 
# hierarchy -top regJump ;
# write_verilog ./verilog/regJump.v
# 
# hierarchy -top regWrite ;
# write_verilog ./verilog/regWrite.v
# 
# hierarchy -top reg_16b ;
# write_verilog ./verilog/reg_16b.v
# 
# hierarchy -top reg_1b ;
# write_verilog ./verilog/reg_1b.v
# 
# hierarchy -top reg_3b ;
# write_verilog ./verilog/reg_3b.v
# 
# hierarchy -top reg_4b ;
# write_verilog ./verilog/reg_4b.v
# 
# hierarchy -top rf ;
# write_verilog ./verilog/rf.v
# 
# hierarchy -top rf_bypass ;
# write_verilog ./verilog/rf_bypass.v
# 
# hierarchy -top seSel ;
# write_verilog ./verilog/seSel.v
# 
# hierarchy -top stallmem.syn ;
# write_verilog ./verilog/stallmem.syn.v
# 
# hierarchy -top writeback ;
# write_verilog ./verilog/writeback.v
# 
# hierarchy -top xnor5_1 ;
# write_verilog ./verilog/xnor5_1.v
