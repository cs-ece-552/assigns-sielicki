/* Generated by Yosys 0.8 (git sha1 b4e5e37, clang 8.0.1 -fPIC -Os) */

module PCAdder(nextpc, pc_plus2, I, D, Rs, SESel, Jump, get02, getEpc, epcValue);
  input [10:0] D;
  input [7:0] I;
  input Jump;
  input [15:0] Rs;
  input SESel;
  input [15:0] epcValue;
  input get02;
  input getEpc;
  wire \muxBas.bit0.MaxA ;
  wire \muxBas.bit0.MaxB ;
  wire \muxBas.bit0.NotS ;
  wire \muxBas.bit0.Out ;
  wire \muxBas.bit1.MaxA ;
  wire \muxBas.bit1.MaxB ;
  wire \muxBas.bit1.Out ;
  wire \muxBas.bit10.MaxA ;
  wire \muxBas.bit10.MaxB ;
  wire \muxBas.bit10.Out ;
  wire \muxBas.bit11.MaxA ;
  wire \muxBas.bit11.MaxB ;
  wire \muxBas.bit11.Out ;
  wire \muxBas.bit12.MaxA ;
  wire \muxBas.bit12.MaxB ;
  wire \muxBas.bit12.Out ;
  wire \muxBas.bit13.MaxA ;
  wire \muxBas.bit13.MaxB ;
  wire \muxBas.bit13.Out ;
  wire \muxBas.bit14.MaxA ;
  wire \muxBas.bit14.MaxB ;
  wire \muxBas.bit14.Out ;
  wire \muxBas.bit15.MaxA ;
  wire \muxBas.bit15.MaxB ;
  wire \muxBas.bit15.Out ;
  wire \muxBas.bit2.MaxA ;
  wire \muxBas.bit2.MaxB ;
  wire \muxBas.bit2.Out ;
  wire \muxBas.bit3.MaxA ;
  wire \muxBas.bit3.MaxB ;
  wire \muxBas.bit3.Out ;
  wire \muxBas.bit4.MaxA ;
  wire \muxBas.bit4.MaxB ;
  wire \muxBas.bit4.Out ;
  wire \muxBas.bit5.MaxA ;
  wire \muxBas.bit5.MaxB ;
  wire \muxBas.bit5.Out ;
  wire \muxBas.bit6.MaxA ;
  wire \muxBas.bit6.MaxB ;
  wire \muxBas.bit6.Out ;
  wire \muxBas.bit7.MaxA ;
  wire \muxBas.bit7.MaxB ;
  wire \muxBas.bit7.Out ;
  wire \muxBas.bit8.MaxA ;
  wire \muxBas.bit8.MaxB ;
  wire \muxBas.bit8.Out ;
  wire \muxBas.bit9.MaxA ;
  wire \muxBas.bit9.MaxB ;
  wire \muxBas.bit9.Out ;
  wire \muxEpc.bit0.InA ;
  wire \muxEpc.bit0.MaxA ;
  wire \muxEpc.bit0.MaxB ;
  wire \muxEpc.bit0.NotS ;
  wire \muxEpc.bit0.Out ;
  wire \muxEpc.bit1.InA ;
  wire \muxEpc.bit1.MaxA ;
  wire \muxEpc.bit1.MaxB ;
  wire \muxEpc.bit1.Out ;
  wire \muxEpc.bit10.InA ;
  wire \muxEpc.bit10.MaxA ;
  wire \muxEpc.bit10.Out ;
  wire \muxEpc.bit11.InA ;
  wire \muxEpc.bit11.MaxA ;
  wire \muxEpc.bit11.Out ;
  wire \muxEpc.bit12.InA ;
  wire \muxEpc.bit12.MaxA ;
  wire \muxEpc.bit12.Out ;
  wire \muxEpc.bit13.InA ;
  wire \muxEpc.bit13.MaxA ;
  wire \muxEpc.bit13.Out ;
  wire \muxEpc.bit14.InA ;
  wire \muxEpc.bit14.MaxA ;
  wire \muxEpc.bit14.Out ;
  wire \muxEpc.bit15.InA ;
  wire \muxEpc.bit15.MaxA ;
  wire \muxEpc.bit15.Out ;
  wire \muxEpc.bit2.InA ;
  wire \muxEpc.bit2.MaxA ;
  wire \muxEpc.bit2.Out ;
  wire \muxEpc.bit3.InA ;
  wire \muxEpc.bit3.MaxA ;
  wire \muxEpc.bit3.Out ;
  wire \muxEpc.bit4.InA ;
  wire \muxEpc.bit4.MaxA ;
  wire \muxEpc.bit4.Out ;
  wire \muxEpc.bit5.InA ;
  wire \muxEpc.bit5.MaxA ;
  wire \muxEpc.bit5.Out ;
  wire \muxEpc.bit6.InA ;
  wire \muxEpc.bit6.MaxA ;
  wire \muxEpc.bit6.Out ;
  wire \muxEpc.bit7.InA ;
  wire \muxEpc.bit7.MaxA ;
  wire \muxEpc.bit7.Out ;
  wire \muxEpc.bit8.InA ;
  wire \muxEpc.bit8.MaxA ;
  wire \muxEpc.bit8.Out ;
  wire \muxEpc.bit9.InA ;
  wire \muxEpc.bit9.MaxA ;
  wire \muxEpc.bit9.Out ;
  wire \muxImm.bit0.MaxA ;
  wire \muxImm.bit0.MaxB ;
  wire \muxImm.bit0.NotS ;
  wire \muxImm.bit0.Out ;
  wire \muxImm.bit1.MaxA ;
  wire \muxImm.bit1.MaxB ;
  wire \muxImm.bit1.Out ;
  wire \muxImm.bit10.MaxA ;
  wire \muxImm.bit10.MaxB ;
  wire \muxImm.bit10.Out ;
  wire \muxImm.bit2.MaxA ;
  wire \muxImm.bit2.MaxB ;
  wire \muxImm.bit2.Out ;
  wire \muxImm.bit3.MaxA ;
  wire \muxImm.bit3.MaxB ;
  wire \muxImm.bit3.Out ;
  wire \muxImm.bit4.MaxA ;
  wire \muxImm.bit4.MaxB ;
  wire \muxImm.bit4.Out ;
  wire \muxImm.bit5.MaxA ;
  wire \muxImm.bit5.MaxB ;
  wire \muxImm.bit5.Out ;
  wire \muxImm.bit6.MaxA ;
  wire \muxImm.bit6.MaxB ;
  wire \muxImm.bit6.Out ;
  wire \muxImm.bit7.MaxB ;
  wire \muxImm.bit7.Out ;
  wire \muxImm.bit8.MaxB ;
  wire \muxImm.bit8.Out ;
  wire \muxImm.bit9.MaxB ;
  wire \muxImm.bit9.Out ;
  output [15:0] nextpc;
  wire \pcFinalWithException.bit0.MaxA ;
  wire \pcFinalWithException.bit0.MaxB ;
  wire \pcFinalWithException.bit0.NotS ;
  wire \pcFinalWithException.bit0.Out ;
  wire \pcFinalWithException.bit1.MaxA ;
  wire \pcFinalWithException.bit1.MaxB ;
  wire \pcFinalWithException.bit1.Out ;
  wire \pcFinalWithException.bit10.MaxA ;
  wire \pcFinalWithException.bit10.MaxB ;
  wire \pcFinalWithException.bit10.Out ;
  wire \pcFinalWithException.bit11.MaxA ;
  wire \pcFinalWithException.bit11.MaxB ;
  wire \pcFinalWithException.bit11.Out ;
  wire \pcFinalWithException.bit12.MaxA ;
  wire \pcFinalWithException.bit12.MaxB ;
  wire \pcFinalWithException.bit12.Out ;
  wire \pcFinalWithException.bit13.MaxA ;
  wire \pcFinalWithException.bit13.MaxB ;
  wire \pcFinalWithException.bit13.Out ;
  wire \pcFinalWithException.bit14.MaxA ;
  wire \pcFinalWithException.bit14.MaxB ;
  wire \pcFinalWithException.bit14.Out ;
  wire \pcFinalWithException.bit15.MaxA ;
  wire \pcFinalWithException.bit15.MaxB ;
  wire \pcFinalWithException.bit15.Out ;
  wire \pcFinalWithException.bit2.MaxA ;
  wire \pcFinalWithException.bit2.MaxB ;
  wire \pcFinalWithException.bit2.Out ;
  wire \pcFinalWithException.bit3.MaxA ;
  wire \pcFinalWithException.bit3.MaxB ;
  wire \pcFinalWithException.bit3.Out ;
  wire \pcFinalWithException.bit4.MaxA ;
  wire \pcFinalWithException.bit4.MaxB ;
  wire \pcFinalWithException.bit4.Out ;
  wire \pcFinalWithException.bit5.MaxA ;
  wire \pcFinalWithException.bit5.MaxB ;
  wire \pcFinalWithException.bit5.Out ;
  wire \pcFinalWithException.bit6.MaxA ;
  wire \pcFinalWithException.bit6.MaxB ;
  wire \pcFinalWithException.bit6.Out ;
  wire \pcFinalWithException.bit7.MaxA ;
  wire \pcFinalWithException.bit7.MaxB ;
  wire \pcFinalWithException.bit7.Out ;
  wire \pcFinalWithException.bit8.MaxA ;
  wire \pcFinalWithException.bit8.MaxB ;
  wire \pcFinalWithException.bit8.Out ;
  wire \pcFinalWithException.bit9.MaxA ;
  wire \pcFinalWithException.bit9.MaxB ;
  wire \pcFinalWithException.bit9.Out ;
  input [15:0] pc_plus2;
  wire \pc_plus_ext.bit1.C_out ;
  wire \pc_plus_ext.bit1.c1 ;
  wire \pc_plus_ext.bit1.c2 ;
  wire \pc_plus_ext.bit1.c3 ;
  wire \pc_plus_ext.bit1.four.a ;
  wire \pc_plus_ext.bit1.four.b ;
  wire \pc_plus_ext.bit1.four.c ;
  wire \pc_plus_ext.bit1.four.d ;
  wire \pc_plus_ext.bit1.four.e ;
  wire \pc_plus_ext.bit1.four.eight.out ;
  wire \pc_plus_ext.bit1.four.g ;
  wire \pc_plus_ext.bit1.one.a ;
  wire \pc_plus_ext.bit1.one.b ;
  wire \pc_plus_ext.bit1.one.c ;
  wire \pc_plus_ext.bit1.one.d ;
  wire \pc_plus_ext.bit1.one.e ;
  wire \pc_plus_ext.bit1.one.eight.out ;
  wire \pc_plus_ext.bit1.one.g ;
  wire \pc_plus_ext.bit1.three.a ;
  wire \pc_plus_ext.bit1.three.b ;
  wire \pc_plus_ext.bit1.three.c ;
  wire \pc_plus_ext.bit1.three.d ;
  wire \pc_plus_ext.bit1.three.e ;
  wire \pc_plus_ext.bit1.three.eight.out ;
  wire \pc_plus_ext.bit1.three.g ;
  wire \pc_plus_ext.bit1.two.a ;
  wire \pc_plus_ext.bit1.two.b ;
  wire \pc_plus_ext.bit1.two.c ;
  wire \pc_plus_ext.bit1.two.d ;
  wire \pc_plus_ext.bit1.two.e ;
  wire \pc_plus_ext.bit1.two.eight.out ;
  wire \pc_plus_ext.bit1.two.g ;
  wire \pc_plus_ext.bit2.C_out ;
  wire \pc_plus_ext.bit2.c1 ;
  wire \pc_plus_ext.bit2.c2 ;
  wire \pc_plus_ext.bit2.c3 ;
  wire \pc_plus_ext.bit2.four.a ;
  wire \pc_plus_ext.bit2.four.b ;
  wire \pc_plus_ext.bit2.four.c ;
  wire \pc_plus_ext.bit2.four.d ;
  wire \pc_plus_ext.bit2.four.e ;
  wire \pc_plus_ext.bit2.four.eight.out ;
  wire \pc_plus_ext.bit2.four.g ;
  wire \pc_plus_ext.bit2.one.a ;
  wire \pc_plus_ext.bit2.one.b ;
  wire \pc_plus_ext.bit2.one.c ;
  wire \pc_plus_ext.bit2.one.d ;
  wire \pc_plus_ext.bit2.one.e ;
  wire \pc_plus_ext.bit2.one.eight.out ;
  wire \pc_plus_ext.bit2.one.g ;
  wire \pc_plus_ext.bit2.three.a ;
  wire \pc_plus_ext.bit2.three.b ;
  wire \pc_plus_ext.bit2.three.c ;
  wire \pc_plus_ext.bit2.three.d ;
  wire \pc_plus_ext.bit2.three.e ;
  wire \pc_plus_ext.bit2.three.eight.out ;
  wire \pc_plus_ext.bit2.three.g ;
  wire \pc_plus_ext.bit2.two.a ;
  wire \pc_plus_ext.bit2.two.b ;
  wire \pc_plus_ext.bit2.two.c ;
  wire \pc_plus_ext.bit2.two.d ;
  wire \pc_plus_ext.bit2.two.e ;
  wire \pc_plus_ext.bit2.two.eight.out ;
  wire \pc_plus_ext.bit2.two.g ;
  wire \pc_plus_ext.bit3.C_out ;
  wire \pc_plus_ext.bit3.c1 ;
  wire \pc_plus_ext.bit3.c2 ;
  wire \pc_plus_ext.bit3.c3 ;
  wire \pc_plus_ext.bit3.four.a ;
  wire \pc_plus_ext.bit3.four.b ;
  wire \pc_plus_ext.bit3.four.c ;
  wire \pc_plus_ext.bit3.four.d ;
  wire \pc_plus_ext.bit3.four.e ;
  wire \pc_plus_ext.bit3.four.eight.out ;
  wire \pc_plus_ext.bit3.four.g ;
  wire \pc_plus_ext.bit3.one.a ;
  wire \pc_plus_ext.bit3.one.b ;
  wire \pc_plus_ext.bit3.one.c ;
  wire \pc_plus_ext.bit3.one.d ;
  wire \pc_plus_ext.bit3.one.e ;
  wire \pc_plus_ext.bit3.one.eight.out ;
  wire \pc_plus_ext.bit3.one.g ;
  wire \pc_plus_ext.bit3.three.a ;
  wire \pc_plus_ext.bit3.three.b ;
  wire \pc_plus_ext.bit3.three.c ;
  wire \pc_plus_ext.bit3.three.d ;
  wire \pc_plus_ext.bit3.three.e ;
  wire \pc_plus_ext.bit3.three.eight.out ;
  wire \pc_plus_ext.bit3.three.g ;
  wire \pc_plus_ext.bit3.two.a ;
  wire \pc_plus_ext.bit3.two.b ;
  wire \pc_plus_ext.bit3.two.c ;
  wire \pc_plus_ext.bit3.two.d ;
  wire \pc_plus_ext.bit3.two.e ;
  wire \pc_plus_ext.bit3.two.eight.out ;
  wire \pc_plus_ext.bit3.two.g ;
  wire \pc_plus_ext.bit4.c1 ;
  wire \pc_plus_ext.bit4.c2 ;
  wire \pc_plus_ext.bit4.c3 ;
  wire \pc_plus_ext.bit4.four.a ;
  wire \pc_plus_ext.bit4.four.b ;
  wire \pc_plus_ext.bit4.four.c ;
  wire \pc_plus_ext.bit4.four.d ;
  wire \pc_plus_ext.bit4.four.e ;
  wire \pc_plus_ext.bit4.four.eight.out ;
  wire \pc_plus_ext.bit4.four.g ;
  wire \pc_plus_ext.bit4.one.a ;
  wire \pc_plus_ext.bit4.one.b ;
  wire \pc_plus_ext.bit4.one.c ;
  wire \pc_plus_ext.bit4.one.d ;
  wire \pc_plus_ext.bit4.one.e ;
  wire \pc_plus_ext.bit4.one.eight.out ;
  wire \pc_plus_ext.bit4.one.g ;
  wire \pc_plus_ext.bit4.three.a ;
  wire \pc_plus_ext.bit4.three.b ;
  wire \pc_plus_ext.bit4.three.c ;
  wire \pc_plus_ext.bit4.three.d ;
  wire \pc_plus_ext.bit4.three.e ;
  wire \pc_plus_ext.bit4.three.eight.out ;
  wire \pc_plus_ext.bit4.three.g ;
  wire \pc_plus_ext.bit4.two.a ;
  wire \pc_plus_ext.bit4.two.b ;
  wire \pc_plus_ext.bit4.two.c ;
  wire \pc_plus_ext.bit4.two.d ;
  wire \pc_plus_ext.bit4.two.e ;
  wire \pc_plus_ext.bit4.two.eight.out ;
  wire \pc_plus_ext.bit4.two.g ;
  assign \muxBas.bit0.NotS  = ~Jump;
  assign \muxBas.bit0.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[0]);
  assign \muxBas.bit0.MaxB  = ~(Jump & Rs[0]);
  assign \muxBas.bit0.Out  = ~(\muxBas.bit0.MaxA  & \muxBas.bit0.MaxB );
  assign \muxBas.bit1.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[1]);
  assign \muxBas.bit1.MaxB  = ~(Jump & Rs[1]);
  assign \muxBas.bit1.Out  = ~(\muxBas.bit1.MaxA  & \muxBas.bit1.MaxB );
  assign \muxBas.bit10.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[10]);
  assign \muxBas.bit10.MaxB  = ~(Jump & Rs[10]);
  assign \muxBas.bit10.Out  = ~(\muxBas.bit10.MaxA  & \muxBas.bit10.MaxB );
  assign \muxBas.bit11.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[11]);
  assign \muxBas.bit11.MaxB  = ~(Jump & Rs[11]);
  assign \muxBas.bit11.Out  = ~(\muxBas.bit11.MaxA  & \muxBas.bit11.MaxB );
  assign \muxBas.bit12.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[12]);
  assign \muxBas.bit12.MaxB  = ~(Jump & Rs[12]);
  assign \muxBas.bit12.Out  = ~(\muxBas.bit12.MaxA  & \muxBas.bit12.MaxB );
  assign \muxBas.bit13.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[13]);
  assign \muxBas.bit13.MaxB  = ~(Jump & Rs[13]);
  assign \muxBas.bit13.Out  = ~(\muxBas.bit13.MaxA  & \muxBas.bit13.MaxB );
  assign \muxBas.bit14.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[14]);
  assign \muxBas.bit14.MaxB  = ~(Jump & Rs[14]);
  assign \muxBas.bit14.Out  = ~(\muxBas.bit14.MaxA  & \muxBas.bit14.MaxB );
  assign \muxBas.bit15.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[15]);
  assign \muxBas.bit15.MaxB  = ~(Jump & Rs[15]);
  assign \muxBas.bit15.Out  = ~(\muxBas.bit15.MaxA  & \muxBas.bit15.MaxB );
  assign \muxBas.bit2.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[2]);
  assign \muxBas.bit2.MaxB  = ~(Jump & Rs[2]);
  assign \muxBas.bit2.Out  = ~(\muxBas.bit2.MaxA  & \muxBas.bit2.MaxB );
  assign \muxBas.bit3.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[3]);
  assign \muxBas.bit3.MaxB  = ~(Jump & Rs[3]);
  assign \muxBas.bit3.Out  = ~(\muxBas.bit3.MaxA  & \muxBas.bit3.MaxB );
  assign \muxBas.bit4.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[4]);
  assign \muxBas.bit4.MaxB  = ~(Jump & Rs[4]);
  assign \muxBas.bit4.Out  = ~(\muxBas.bit4.MaxA  & \muxBas.bit4.MaxB );
  assign \muxBas.bit5.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[5]);
  assign \muxBas.bit5.MaxB  = ~(Jump & Rs[5]);
  assign \muxBas.bit5.Out  = ~(\muxBas.bit5.MaxA  & \muxBas.bit5.MaxB );
  assign \muxBas.bit6.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[6]);
  assign \muxBas.bit6.MaxB  = ~(Jump & Rs[6]);
  assign \muxBas.bit6.Out  = ~(\muxBas.bit6.MaxA  & \muxBas.bit6.MaxB );
  assign \muxBas.bit7.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[7]);
  assign \muxBas.bit7.MaxB  = ~(Jump & Rs[7]);
  assign \muxBas.bit7.Out  = ~(\muxBas.bit7.MaxA  & \muxBas.bit7.MaxB );
  assign \muxBas.bit8.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[8]);
  assign \muxBas.bit8.MaxB  = ~(Jump & Rs[8]);
  assign \muxBas.bit8.Out  = ~(\muxBas.bit8.MaxA  & \muxBas.bit8.MaxB );
  assign \muxBas.bit9.MaxA  = ~(\muxBas.bit0.NotS  & pc_plus2[9]);
  assign \muxBas.bit9.MaxB  = ~(Jump & Rs[9]);
  assign \muxBas.bit9.Out  = ~(\muxBas.bit9.MaxA  & \muxBas.bit9.MaxB );
  assign \muxEpc.bit0.NotS  = ~get02;
  assign \muxEpc.bit0.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit0.InA );
  assign \muxEpc.bit0.MaxB  = ~(get02 & 1'h0);
  assign \muxEpc.bit0.Out  = ~(\muxEpc.bit0.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit1.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit1.InA );
  assign \muxEpc.bit1.MaxB  = ~(get02 & 1'h1);
  assign \muxEpc.bit1.Out  = ~(\muxEpc.bit1.MaxA  & \muxEpc.bit1.MaxB );
  assign \muxEpc.bit10.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit10.InA );
  assign \muxEpc.bit10.Out  = ~(\muxEpc.bit10.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit11.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit11.InA );
  assign \muxEpc.bit11.Out  = ~(\muxEpc.bit11.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit12.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit12.InA );
  assign \muxEpc.bit12.Out  = ~(\muxEpc.bit12.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit13.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit13.InA );
  assign \muxEpc.bit13.Out  = ~(\muxEpc.bit13.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit14.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit14.InA );
  assign \muxEpc.bit14.Out  = ~(\muxEpc.bit14.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit15.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit15.InA );
  assign \muxEpc.bit15.Out  = ~(\muxEpc.bit15.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit2.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit2.InA );
  assign \muxEpc.bit2.Out  = ~(\muxEpc.bit2.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit3.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit3.InA );
  assign \muxEpc.bit3.Out  = ~(\muxEpc.bit3.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit4.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit4.InA );
  assign \muxEpc.bit4.Out  = ~(\muxEpc.bit4.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit5.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit5.InA );
  assign \muxEpc.bit5.Out  = ~(\muxEpc.bit5.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit6.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit6.InA );
  assign \muxEpc.bit6.Out  = ~(\muxEpc.bit6.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit7.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit7.InA );
  assign \muxEpc.bit7.Out  = ~(\muxEpc.bit7.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit8.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit8.InA );
  assign \muxEpc.bit8.Out  = ~(\muxEpc.bit8.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxEpc.bit9.MaxA  = ~(\muxEpc.bit0.NotS  & \muxEpc.bit9.InA );
  assign \muxEpc.bit9.Out  = ~(\muxEpc.bit9.MaxA  & \muxEpc.bit0.MaxB );
  assign \muxImm.bit0.NotS  = ~SESel;
  assign \muxImm.bit0.MaxA  = ~(\muxImm.bit0.NotS  & I[0]);
  assign \muxImm.bit0.MaxB  = ~(SESel & D[0]);
  assign \muxImm.bit0.Out  = ~(\muxImm.bit0.MaxA  & \muxImm.bit0.MaxB );
  assign \muxImm.bit1.MaxA  = ~(\muxImm.bit0.NotS  & I[1]);
  assign \muxImm.bit1.MaxB  = ~(SESel & D[1]);
  assign \muxImm.bit1.Out  = ~(\muxImm.bit1.MaxA  & \muxImm.bit1.MaxB );
  assign \muxImm.bit10.MaxA  = ~(\muxImm.bit0.NotS  & I[7]);
  assign \muxImm.bit10.MaxB  = ~(SESel & D[10]);
  assign \muxImm.bit10.Out  = ~(\muxImm.bit10.MaxA  & \muxImm.bit10.MaxB );
  assign \muxImm.bit2.MaxA  = ~(\muxImm.bit0.NotS  & I[2]);
  assign \muxImm.bit2.MaxB  = ~(SESel & D[2]);
  assign \muxImm.bit2.Out  = ~(\muxImm.bit2.MaxA  & \muxImm.bit2.MaxB );
  assign \muxImm.bit3.MaxA  = ~(\muxImm.bit0.NotS  & I[3]);
  assign \muxImm.bit3.MaxB  = ~(SESel & D[3]);
  assign \muxImm.bit3.Out  = ~(\muxImm.bit3.MaxA  & \muxImm.bit3.MaxB );
  assign \muxImm.bit4.MaxA  = ~(\muxImm.bit0.NotS  & I[4]);
  assign \muxImm.bit4.MaxB  = ~(SESel & D[4]);
  assign \muxImm.bit4.Out  = ~(\muxImm.bit4.MaxA  & \muxImm.bit4.MaxB );
  assign \muxImm.bit5.MaxA  = ~(\muxImm.bit0.NotS  & I[5]);
  assign \muxImm.bit5.MaxB  = ~(SESel & D[5]);
  assign \muxImm.bit5.Out  = ~(\muxImm.bit5.MaxA  & \muxImm.bit5.MaxB );
  assign \muxImm.bit6.MaxA  = ~(\muxImm.bit0.NotS  & I[6]);
  assign \muxImm.bit6.MaxB  = ~(SESel & D[6]);
  assign \muxImm.bit6.Out  = ~(\muxImm.bit6.MaxA  & \muxImm.bit6.MaxB );
  assign \muxImm.bit7.MaxB  = ~(SESel & D[7]);
  assign \muxImm.bit7.Out  = ~(\muxImm.bit10.MaxA  & \muxImm.bit7.MaxB );
  assign \muxImm.bit8.MaxB  = ~(SESel & D[8]);
  assign \muxImm.bit8.Out  = ~(\muxImm.bit10.MaxA  & \muxImm.bit8.MaxB );
  assign \muxImm.bit9.MaxB  = ~(SESel & D[9]);
  assign \muxImm.bit9.Out  = ~(\muxImm.bit10.MaxA  & \muxImm.bit9.MaxB );
  assign \pcFinalWithException.bit0.NotS  = ~getEpc;
  assign \pcFinalWithException.bit0.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit0.Out );
  assign \pcFinalWithException.bit0.MaxB  = ~(getEpc & epcValue[0]);
  assign \pcFinalWithException.bit0.Out  = ~(\pcFinalWithException.bit0.MaxA  & \pcFinalWithException.bit0.MaxB );
  assign \pcFinalWithException.bit1.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit1.Out );
  assign \pcFinalWithException.bit1.MaxB  = ~(getEpc & epcValue[1]);
  assign \pcFinalWithException.bit1.Out  = ~(\pcFinalWithException.bit1.MaxA  & \pcFinalWithException.bit1.MaxB );
  assign \pcFinalWithException.bit10.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit10.Out );
  assign \pcFinalWithException.bit10.MaxB  = ~(getEpc & epcValue[10]);
  assign \pcFinalWithException.bit10.Out  = ~(\pcFinalWithException.bit10.MaxA  & \pcFinalWithException.bit10.MaxB );
  assign \pcFinalWithException.bit11.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit11.Out );
  assign \pcFinalWithException.bit11.MaxB  = ~(getEpc & epcValue[11]);
  assign \pcFinalWithException.bit11.Out  = ~(\pcFinalWithException.bit11.MaxA  & \pcFinalWithException.bit11.MaxB );
  assign \pcFinalWithException.bit12.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit12.Out );
  assign \pcFinalWithException.bit12.MaxB  = ~(getEpc & epcValue[12]);
  assign \pcFinalWithException.bit12.Out  = ~(\pcFinalWithException.bit12.MaxA  & \pcFinalWithException.bit12.MaxB );
  assign \pcFinalWithException.bit13.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit13.Out );
  assign \pcFinalWithException.bit13.MaxB  = ~(getEpc & epcValue[13]);
  assign \pcFinalWithException.bit13.Out  = ~(\pcFinalWithException.bit13.MaxA  & \pcFinalWithException.bit13.MaxB );
  assign \pcFinalWithException.bit14.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit14.Out );
  assign \pcFinalWithException.bit14.MaxB  = ~(getEpc & epcValue[14]);
  assign \pcFinalWithException.bit14.Out  = ~(\pcFinalWithException.bit14.MaxA  & \pcFinalWithException.bit14.MaxB );
  assign \pcFinalWithException.bit15.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit15.Out );
  assign \pcFinalWithException.bit15.MaxB  = ~(getEpc & epcValue[15]);
  assign \pcFinalWithException.bit15.Out  = ~(\pcFinalWithException.bit15.MaxA  & \pcFinalWithException.bit15.MaxB );
  assign \pcFinalWithException.bit2.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit2.Out );
  assign \pcFinalWithException.bit2.MaxB  = ~(getEpc & epcValue[2]);
  assign \pcFinalWithException.bit2.Out  = ~(\pcFinalWithException.bit2.MaxA  & \pcFinalWithException.bit2.MaxB );
  assign \pcFinalWithException.bit3.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit3.Out );
  assign \pcFinalWithException.bit3.MaxB  = ~(getEpc & epcValue[3]);
  assign \pcFinalWithException.bit3.Out  = ~(\pcFinalWithException.bit3.MaxA  & \pcFinalWithException.bit3.MaxB );
  assign \pcFinalWithException.bit4.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit4.Out );
  assign \pcFinalWithException.bit4.MaxB  = ~(getEpc & epcValue[4]);
  assign \pcFinalWithException.bit4.Out  = ~(\pcFinalWithException.bit4.MaxA  & \pcFinalWithException.bit4.MaxB );
  assign \pcFinalWithException.bit5.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit5.Out );
  assign \pcFinalWithException.bit5.MaxB  = ~(getEpc & epcValue[5]);
  assign \pcFinalWithException.bit5.Out  = ~(\pcFinalWithException.bit5.MaxA  & \pcFinalWithException.bit5.MaxB );
  assign \pcFinalWithException.bit6.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit6.Out );
  assign \pcFinalWithException.bit6.MaxB  = ~(getEpc & epcValue[6]);
  assign \pcFinalWithException.bit6.Out  = ~(\pcFinalWithException.bit6.MaxA  & \pcFinalWithException.bit6.MaxB );
  assign \pcFinalWithException.bit7.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit7.Out );
  assign \pcFinalWithException.bit7.MaxB  = ~(getEpc & epcValue[7]);
  assign \pcFinalWithException.bit7.Out  = ~(\pcFinalWithException.bit7.MaxA  & \pcFinalWithException.bit7.MaxB );
  assign \pcFinalWithException.bit8.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit8.Out );
  assign \pcFinalWithException.bit8.MaxB  = ~(getEpc & epcValue[8]);
  assign \pcFinalWithException.bit8.Out  = ~(\pcFinalWithException.bit8.MaxA  & \pcFinalWithException.bit8.MaxB );
  assign \pcFinalWithException.bit9.MaxA  = ~(\pcFinalWithException.bit0.NotS  & \muxEpc.bit9.Out );
  assign \pcFinalWithException.bit9.MaxB  = ~(getEpc & epcValue[9]);
  assign \pcFinalWithException.bit9.Out  = ~(\pcFinalWithException.bit9.MaxA  & \pcFinalWithException.bit9.MaxB );
  assign \pc_plus_ext.bit1.four.eight.out  = ~(\pc_plus_ext.bit1.four.e  | \pc_plus_ext.bit1.c3 );
  assign \pc_plus_ext.bit1.four.e  = ~(\pc_plus_ext.bit1.four.d  | \pc_plus_ext.bit1.c3 );
  assign \pc_plus_ext.bit1.four.d  = ~(\pc_plus_ext.bit1.four.b  | \pc_plus_ext.bit1.four.c );
  assign \muxEpc.bit3.InA  = ~(\pc_plus_ext.bit1.four.eight.out  | \pc_plus_ext.bit1.four.g );
  assign \pc_plus_ext.bit1.four.a  = ~(\muxBas.bit3.Out  | \muxImm.bit3.Out );
  assign \pc_plus_ext.bit1.four.g  = ~(\pc_plus_ext.bit1.four.e  | \pc_plus_ext.bit1.four.d );
  assign \pc_plus_ext.bit1.C_out  = ~(\pc_plus_ext.bit1.four.e  | \pc_plus_ext.bit1.four.a );
  assign \pc_plus_ext.bit1.four.c  = ~(\muxImm.bit3.Out  | \pc_plus_ext.bit1.four.a );
  assign \pc_plus_ext.bit1.four.b  = ~(\muxBas.bit3.Out  | \pc_plus_ext.bit1.four.a );
  assign \pc_plus_ext.bit1.one.eight.out  = ~(\pc_plus_ext.bit1.one.e  | 1'h0);
  assign \pc_plus_ext.bit1.one.e  = ~(\pc_plus_ext.bit1.one.d  | 1'h0);
  assign \pc_plus_ext.bit1.one.d  = ~(\pc_plus_ext.bit1.one.b  | \pc_plus_ext.bit1.one.c );
  assign \muxEpc.bit0.InA  = ~(\pc_plus_ext.bit1.one.eight.out  | \pc_plus_ext.bit1.one.g );
  assign \pc_plus_ext.bit1.one.a  = ~(\muxBas.bit0.Out  | \muxImm.bit0.Out );
  assign \pc_plus_ext.bit1.one.g  = ~(\pc_plus_ext.bit1.one.e  | \pc_plus_ext.bit1.one.d );
  assign \pc_plus_ext.bit1.c1  = ~(\pc_plus_ext.bit1.one.e  | \pc_plus_ext.bit1.one.a );
  assign \pc_plus_ext.bit1.one.c  = ~(\muxImm.bit0.Out  | \pc_plus_ext.bit1.one.a );
  assign \pc_plus_ext.bit1.one.b  = ~(\muxBas.bit0.Out  | \pc_plus_ext.bit1.one.a );
  assign \pc_plus_ext.bit1.three.eight.out  = ~(\pc_plus_ext.bit1.three.e  | \pc_plus_ext.bit1.c2 );
  assign \pc_plus_ext.bit1.three.e  = ~(\pc_plus_ext.bit1.three.d  | \pc_plus_ext.bit1.c2 );
  assign \pc_plus_ext.bit1.three.d  = ~(\pc_plus_ext.bit1.three.b  | \pc_plus_ext.bit1.three.c );
  assign \muxEpc.bit2.InA  = ~(\pc_plus_ext.bit1.three.eight.out  | \pc_plus_ext.bit1.three.g );
  assign \pc_plus_ext.bit1.three.a  = ~(\muxBas.bit2.Out  | \muxImm.bit2.Out );
  assign \pc_plus_ext.bit1.three.g  = ~(\pc_plus_ext.bit1.three.e  | \pc_plus_ext.bit1.three.d );
  assign \pc_plus_ext.bit1.c3  = ~(\pc_plus_ext.bit1.three.e  | \pc_plus_ext.bit1.three.a );
  assign \pc_plus_ext.bit1.three.c  = ~(\muxImm.bit2.Out  | \pc_plus_ext.bit1.three.a );
  assign \pc_plus_ext.bit1.three.b  = ~(\muxBas.bit2.Out  | \pc_plus_ext.bit1.three.a );
  assign \pc_plus_ext.bit1.two.eight.out  = ~(\pc_plus_ext.bit1.two.e  | \pc_plus_ext.bit1.c1 );
  assign \pc_plus_ext.bit1.two.e  = ~(\pc_plus_ext.bit1.two.d  | \pc_plus_ext.bit1.c1 );
  assign \pc_plus_ext.bit1.two.d  = ~(\pc_plus_ext.bit1.two.b  | \pc_plus_ext.bit1.two.c );
  assign \muxEpc.bit1.InA  = ~(\pc_plus_ext.bit1.two.eight.out  | \pc_plus_ext.bit1.two.g );
  assign \pc_plus_ext.bit1.two.a  = ~(\muxBas.bit1.Out  | \muxImm.bit1.Out );
  assign \pc_plus_ext.bit1.two.g  = ~(\pc_plus_ext.bit1.two.e  | \pc_plus_ext.bit1.two.d );
  assign \pc_plus_ext.bit1.c2  = ~(\pc_plus_ext.bit1.two.e  | \pc_plus_ext.bit1.two.a );
  assign \pc_plus_ext.bit1.two.c  = ~(\muxImm.bit1.Out  | \pc_plus_ext.bit1.two.a );
  assign \pc_plus_ext.bit1.two.b  = ~(\muxBas.bit1.Out  | \pc_plus_ext.bit1.two.a );
  assign \pc_plus_ext.bit2.four.eight.out  = ~(\pc_plus_ext.bit2.four.e  | \pc_plus_ext.bit2.c3 );
  assign \pc_plus_ext.bit2.four.e  = ~(\pc_plus_ext.bit2.four.d  | \pc_plus_ext.bit2.c3 );
  assign \pc_plus_ext.bit2.four.d  = ~(\pc_plus_ext.bit2.four.b  | \pc_plus_ext.bit2.four.c );
  assign \muxEpc.bit7.InA  = ~(\pc_plus_ext.bit2.four.eight.out  | \pc_plus_ext.bit2.four.g );
  assign \pc_plus_ext.bit2.four.a  = ~(\muxBas.bit7.Out  | \muxImm.bit7.Out );
  assign \pc_plus_ext.bit2.four.g  = ~(\pc_plus_ext.bit2.four.e  | \pc_plus_ext.bit2.four.d );
  assign \pc_plus_ext.bit2.C_out  = ~(\pc_plus_ext.bit2.four.e  | \pc_plus_ext.bit2.four.a );
  assign \pc_plus_ext.bit2.four.c  = ~(\muxImm.bit7.Out  | \pc_plus_ext.bit2.four.a );
  assign \pc_plus_ext.bit2.four.b  = ~(\muxBas.bit7.Out  | \pc_plus_ext.bit2.four.a );
  assign \pc_plus_ext.bit2.one.eight.out  = ~(\pc_plus_ext.bit2.one.e  | \pc_plus_ext.bit1.C_out );
  assign \pc_plus_ext.bit2.one.e  = ~(\pc_plus_ext.bit2.one.d  | \pc_plus_ext.bit1.C_out );
  assign \pc_plus_ext.bit2.one.d  = ~(\pc_plus_ext.bit2.one.b  | \pc_plus_ext.bit2.one.c );
  assign \muxEpc.bit4.InA  = ~(\pc_plus_ext.bit2.one.eight.out  | \pc_plus_ext.bit2.one.g );
  assign \pc_plus_ext.bit2.one.a  = ~(\muxBas.bit4.Out  | \muxImm.bit4.Out );
  assign \pc_plus_ext.bit2.one.g  = ~(\pc_plus_ext.bit2.one.e  | \pc_plus_ext.bit2.one.d );
  assign \pc_plus_ext.bit2.c1  = ~(\pc_plus_ext.bit2.one.e  | \pc_plus_ext.bit2.one.a );
  assign \pc_plus_ext.bit2.one.c  = ~(\muxImm.bit4.Out  | \pc_plus_ext.bit2.one.a );
  assign \pc_plus_ext.bit2.one.b  = ~(\muxBas.bit4.Out  | \pc_plus_ext.bit2.one.a );
  assign \pc_plus_ext.bit2.three.eight.out  = ~(\pc_plus_ext.bit2.three.e  | \pc_plus_ext.bit2.c2 );
  assign \pc_plus_ext.bit2.three.e  = ~(\pc_plus_ext.bit2.three.d  | \pc_plus_ext.bit2.c2 );
  assign \pc_plus_ext.bit2.three.d  = ~(\pc_plus_ext.bit2.three.b  | \pc_plus_ext.bit2.three.c );
  assign \muxEpc.bit6.InA  = ~(\pc_plus_ext.bit2.three.eight.out  | \pc_plus_ext.bit2.three.g );
  assign \pc_plus_ext.bit2.three.a  = ~(\muxBas.bit6.Out  | \muxImm.bit6.Out );
  assign \pc_plus_ext.bit2.three.g  = ~(\pc_plus_ext.bit2.three.e  | \pc_plus_ext.bit2.three.d );
  assign \pc_plus_ext.bit2.c3  = ~(\pc_plus_ext.bit2.three.e  | \pc_plus_ext.bit2.three.a );
  assign \pc_plus_ext.bit2.three.c  = ~(\muxImm.bit6.Out  | \pc_plus_ext.bit2.three.a );
  assign \pc_plus_ext.bit2.three.b  = ~(\muxBas.bit6.Out  | \pc_plus_ext.bit2.three.a );
  assign \pc_plus_ext.bit2.two.eight.out  = ~(\pc_plus_ext.bit2.two.e  | \pc_plus_ext.bit2.c1 );
  assign \pc_plus_ext.bit2.two.e  = ~(\pc_plus_ext.bit2.two.d  | \pc_plus_ext.bit2.c1 );
  assign \pc_plus_ext.bit2.two.d  = ~(\pc_plus_ext.bit2.two.b  | \pc_plus_ext.bit2.two.c );
  assign \muxEpc.bit5.InA  = ~(\pc_plus_ext.bit2.two.eight.out  | \pc_plus_ext.bit2.two.g );
  assign \pc_plus_ext.bit2.two.a  = ~(\muxBas.bit5.Out  | \muxImm.bit5.Out );
  assign \pc_plus_ext.bit2.two.g  = ~(\pc_plus_ext.bit2.two.e  | \pc_plus_ext.bit2.two.d );
  assign \pc_plus_ext.bit2.c2  = ~(\pc_plus_ext.bit2.two.e  | \pc_plus_ext.bit2.two.a );
  assign \pc_plus_ext.bit2.two.c  = ~(\muxImm.bit5.Out  | \pc_plus_ext.bit2.two.a );
  assign \pc_plus_ext.bit2.two.b  = ~(\muxBas.bit5.Out  | \pc_plus_ext.bit2.two.a );
  assign \pc_plus_ext.bit3.four.eight.out  = ~(\pc_plus_ext.bit3.four.e  | \pc_plus_ext.bit3.c3 );
  assign \pc_plus_ext.bit3.four.e  = ~(\pc_plus_ext.bit3.four.d  | \pc_plus_ext.bit3.c3 );
  assign \pc_plus_ext.bit3.four.d  = ~(\pc_plus_ext.bit3.four.b  | \pc_plus_ext.bit3.four.c );
  assign \muxEpc.bit11.InA  = ~(\pc_plus_ext.bit3.four.eight.out  | \pc_plus_ext.bit3.four.g );
  assign \pc_plus_ext.bit3.four.a  = ~(\muxBas.bit11.Out  | \muxImm.bit10.Out );
  assign \pc_plus_ext.bit3.four.g  = ~(\pc_plus_ext.bit3.four.e  | \pc_plus_ext.bit3.four.d );
  assign \pc_plus_ext.bit3.C_out  = ~(\pc_plus_ext.bit3.four.e  | \pc_plus_ext.bit3.four.a );
  assign \pc_plus_ext.bit3.four.c  = ~(\muxImm.bit10.Out  | \pc_plus_ext.bit3.four.a );
  assign \pc_plus_ext.bit3.four.b  = ~(\muxBas.bit11.Out  | \pc_plus_ext.bit3.four.a );
  assign \pc_plus_ext.bit3.one.eight.out  = ~(\pc_plus_ext.bit3.one.e  | \pc_plus_ext.bit2.C_out );
  assign \pc_plus_ext.bit3.one.e  = ~(\pc_plus_ext.bit3.one.d  | \pc_plus_ext.bit2.C_out );
  assign \pc_plus_ext.bit3.one.d  = ~(\pc_plus_ext.bit3.one.b  | \pc_plus_ext.bit3.one.c );
  assign \muxEpc.bit8.InA  = ~(\pc_plus_ext.bit3.one.eight.out  | \pc_plus_ext.bit3.one.g );
  assign \pc_plus_ext.bit3.one.a  = ~(\muxBas.bit8.Out  | \muxImm.bit8.Out );
  assign \pc_plus_ext.bit3.one.g  = ~(\pc_plus_ext.bit3.one.e  | \pc_plus_ext.bit3.one.d );
  assign \pc_plus_ext.bit3.c1  = ~(\pc_plus_ext.bit3.one.e  | \pc_plus_ext.bit3.one.a );
  assign \pc_plus_ext.bit3.one.c  = ~(\muxImm.bit8.Out  | \pc_plus_ext.bit3.one.a );
  assign \pc_plus_ext.bit3.one.b  = ~(\muxBas.bit8.Out  | \pc_plus_ext.bit3.one.a );
  assign \pc_plus_ext.bit3.three.eight.out  = ~(\pc_plus_ext.bit3.three.e  | \pc_plus_ext.bit3.c2 );
  assign \pc_plus_ext.bit3.three.e  = ~(\pc_plus_ext.bit3.three.d  | \pc_plus_ext.bit3.c2 );
  assign \pc_plus_ext.bit3.three.d  = ~(\pc_plus_ext.bit3.three.b  | \pc_plus_ext.bit3.three.c );
  assign \muxEpc.bit10.InA  = ~(\pc_plus_ext.bit3.three.eight.out  | \pc_plus_ext.bit3.three.g );
  assign \pc_plus_ext.bit3.three.a  = ~(\muxBas.bit10.Out  | \muxImm.bit10.Out );
  assign \pc_plus_ext.bit3.three.g  = ~(\pc_plus_ext.bit3.three.e  | \pc_plus_ext.bit3.three.d );
  assign \pc_plus_ext.bit3.c3  = ~(\pc_plus_ext.bit3.three.e  | \pc_plus_ext.bit3.three.a );
  assign \pc_plus_ext.bit3.three.c  = ~(\muxImm.bit10.Out  | \pc_plus_ext.bit3.three.a );
  assign \pc_plus_ext.bit3.three.b  = ~(\muxBas.bit10.Out  | \pc_plus_ext.bit3.three.a );
  assign \pc_plus_ext.bit3.two.eight.out  = ~(\pc_plus_ext.bit3.two.e  | \pc_plus_ext.bit3.c1 );
  assign \pc_plus_ext.bit3.two.e  = ~(\pc_plus_ext.bit3.two.d  | \pc_plus_ext.bit3.c1 );
  assign \pc_plus_ext.bit3.two.d  = ~(\pc_plus_ext.bit3.two.b  | \pc_plus_ext.bit3.two.c );
  assign \muxEpc.bit9.InA  = ~(\pc_plus_ext.bit3.two.eight.out  | \pc_plus_ext.bit3.two.g );
  assign \pc_plus_ext.bit3.two.a  = ~(\muxBas.bit9.Out  | \muxImm.bit9.Out );
  assign \pc_plus_ext.bit3.two.g  = ~(\pc_plus_ext.bit3.two.e  | \pc_plus_ext.bit3.two.d );
  assign \pc_plus_ext.bit3.c2  = ~(\pc_plus_ext.bit3.two.e  | \pc_plus_ext.bit3.two.a );
  assign \pc_plus_ext.bit3.two.c  = ~(\muxImm.bit9.Out  | \pc_plus_ext.bit3.two.a );
  assign \pc_plus_ext.bit3.two.b  = ~(\muxBas.bit9.Out  | \pc_plus_ext.bit3.two.a );
  assign \pc_plus_ext.bit4.four.eight.out  = ~(\pc_plus_ext.bit4.four.e  | \pc_plus_ext.bit4.c3 );
  assign \pc_plus_ext.bit4.four.e  = ~(\pc_plus_ext.bit4.four.d  | \pc_plus_ext.bit4.c3 );
  assign \pc_plus_ext.bit4.four.d  = ~(\pc_plus_ext.bit4.four.b  | \pc_plus_ext.bit4.four.c );
  assign \muxEpc.bit15.InA  = ~(\pc_plus_ext.bit4.four.eight.out  | \pc_plus_ext.bit4.four.g );
  assign \pc_plus_ext.bit4.four.a  = ~(\muxBas.bit15.Out  | \muxImm.bit10.Out );
  assign \pc_plus_ext.bit4.four.g  = ~(\pc_plus_ext.bit4.four.e  | \pc_plus_ext.bit4.four.d );
  assign \pc_plus_ext.bit4.four.c  = ~(\muxImm.bit10.Out  | \pc_plus_ext.bit4.four.a );
  assign \pc_plus_ext.bit4.four.b  = ~(\muxBas.bit15.Out  | \pc_plus_ext.bit4.four.a );
  assign \pc_plus_ext.bit4.one.eight.out  = ~(\pc_plus_ext.bit4.one.e  | \pc_plus_ext.bit3.C_out );
  assign \pc_plus_ext.bit4.one.e  = ~(\pc_plus_ext.bit4.one.d  | \pc_plus_ext.bit3.C_out );
  assign \pc_plus_ext.bit4.one.d  = ~(\pc_plus_ext.bit4.one.b  | \pc_plus_ext.bit4.one.c );
  assign \muxEpc.bit12.InA  = ~(\pc_plus_ext.bit4.one.eight.out  | \pc_plus_ext.bit4.one.g );
  assign \pc_plus_ext.bit4.one.a  = ~(\muxBas.bit12.Out  | \muxImm.bit10.Out );
  assign \pc_plus_ext.bit4.one.g  = ~(\pc_plus_ext.bit4.one.e  | \pc_plus_ext.bit4.one.d );
  assign \pc_plus_ext.bit4.c1  = ~(\pc_plus_ext.bit4.one.e  | \pc_plus_ext.bit4.one.a );
  assign \pc_plus_ext.bit4.one.c  = ~(\muxImm.bit10.Out  | \pc_plus_ext.bit4.one.a );
  assign \pc_plus_ext.bit4.one.b  = ~(\muxBas.bit12.Out  | \pc_plus_ext.bit4.one.a );
  assign \pc_plus_ext.bit4.three.eight.out  = ~(\pc_plus_ext.bit4.three.e  | \pc_plus_ext.bit4.c2 );
  assign \pc_plus_ext.bit4.three.e  = ~(\pc_plus_ext.bit4.three.d  | \pc_plus_ext.bit4.c2 );
  assign \pc_plus_ext.bit4.three.d  = ~(\pc_plus_ext.bit4.three.b  | \pc_plus_ext.bit4.three.c );
  assign \muxEpc.bit14.InA  = ~(\pc_plus_ext.bit4.three.eight.out  | \pc_plus_ext.bit4.three.g );
  assign \pc_plus_ext.bit4.three.a  = ~(\muxBas.bit14.Out  | \muxImm.bit10.Out );
  assign \pc_plus_ext.bit4.three.g  = ~(\pc_plus_ext.bit4.three.e  | \pc_plus_ext.bit4.three.d );
  assign \pc_plus_ext.bit4.c3  = ~(\pc_plus_ext.bit4.three.e  | \pc_plus_ext.bit4.three.a );
  assign \pc_plus_ext.bit4.three.c  = ~(\muxImm.bit10.Out  | \pc_plus_ext.bit4.three.a );
  assign \pc_plus_ext.bit4.three.b  = ~(\muxBas.bit14.Out  | \pc_plus_ext.bit4.three.a );
  assign \pc_plus_ext.bit4.two.eight.out  = ~(\pc_plus_ext.bit4.two.e  | \pc_plus_ext.bit4.c1 );
  assign \pc_plus_ext.bit4.two.e  = ~(\pc_plus_ext.bit4.two.d  | \pc_plus_ext.bit4.c1 );
  assign \pc_plus_ext.bit4.two.d  = ~(\pc_plus_ext.bit4.two.b  | \pc_plus_ext.bit4.two.c );
  assign \muxEpc.bit13.InA  = ~(\pc_plus_ext.bit4.two.eight.out  | \pc_plus_ext.bit4.two.g );
  assign \pc_plus_ext.bit4.two.a  = ~(\muxBas.bit13.Out  | \muxImm.bit10.Out );
  assign \pc_plus_ext.bit4.two.g  = ~(\pc_plus_ext.bit4.two.e  | \pc_plus_ext.bit4.two.d );
  assign \pc_plus_ext.bit4.c2  = ~(\pc_plus_ext.bit4.two.e  | \pc_plus_ext.bit4.two.a );
  assign \pc_plus_ext.bit4.two.c  = ~(\muxImm.bit10.Out  | \pc_plus_ext.bit4.two.a );
  assign \pc_plus_ext.bit4.two.b  = ~(\muxBas.bit13.Out  | \pc_plus_ext.bit4.two.a );
  assign nextpc = { \pcFinalWithException.bit15.Out , \pcFinalWithException.bit14.Out , \pcFinalWithException.bit13.Out , \pcFinalWithException.bit12.Out , \pcFinalWithException.bit11.Out , \pcFinalWithException.bit10.Out , \pcFinalWithException.bit9.Out , \pcFinalWithException.bit8.Out , \pcFinalWithException.bit7.Out , \pcFinalWithException.bit6.Out , \pcFinalWithException.bit5.Out , \pcFinalWithException.bit4.Out , \pcFinalWithException.bit3.Out , \pcFinalWithException.bit2.Out , \pcFinalWithException.bit1.Out , \pcFinalWithException.bit0.Out  };
endmodule
