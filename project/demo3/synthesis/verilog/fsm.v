/* Generated by Yosys 0.8 (git sha1 b4e5e37, clang 8.0.1 -fPIC -Os) */

module fsm(data_in, memory_out, cache_out, addr_in, miss_tag, miss_index, miss_offset, hit, valid, dirty, rd, wr, clk, rst, cache_tag, cache_index, cache_offset, memory_addr, memory_in, cache_in, data_out, cache_rd, cache_wr, comp, cache_hit, mem_rd, mem_wr, stall, done, ws);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire [1:0] _024_;
  wire [1:0] _025_;
  wire [1:0] _026_;
  wire [1:0] _027_;
  wire [1:0] _028_;
  wire [1:0] _029_;
  wire [1:0] _030_;
  wire _031_;
  wire [3:0] _032_;
  wire [3:0] _033_;
  wire [3:0] _034_;
  wire [3:0] _035_;
  wire [1:0] _036_;
  wire [1:0] _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire [15:0] _110_;
  wire [15:0] _111_;
  wire [15:0] _112_;
  wire [15:0] _113_;
  wire [15:0] _114_;
  wire [15:0] _115_;
  wire [15:0] _116_;
  wire [2:0] _117_;
  wire [2:0] _118_;
  wire [2:0] _119_;
  wire [2:0] _120_;
  wire [1:0] _121_;
  wire [1:0] _122_;
  wire [1:0] _123_;
  wire [1:0] _124_;
  wire [3:0] _125_;
  wire [3:0] _126_;
  wire [3:0] _127_;
  wire [3:0] _128_;
  wire [3:0] _129_;
  wire [3:0] _130_;
  wire [3:0] _131_;
  wire [3:0] _132_;
  wire [3:0] _133_;
  wire [3:0] _134_;
  wire [3:0] _135_;
  wire [3:0] _136_;
  wire [3:0] _137_;
  wire [3:0] _138_;
  wire [3:0] _139_;
  input [15:0] addr_in;
  wire addr_in_to_cache;
  wire [15:0] addr_reg;
  wire buff_0_to_cache;
  wire buff_0_to_mem;
  wire buff_1_to_cache;
  wire buff_1_to_mem;
  wire buff_2_to_mem;
  wire buff_3_to_mem;
  wire buff_to_out;
  output cache_hit;
  output [15:0] cache_in;
  output [7:0] cache_index;
  output [2:0] cache_offset;
  input [15:0] cache_out;
  output cache_rd;
  output [4:0] cache_tag;
  output cache_wr;
  input clk;
  output comp;
  wire [3:0] curr_state;
  input [15:0] data_in;
  output [15:0] data_out;
  wire [15:0] data_reg;
  wire data_reg_to_cache;
  input dirty;
  output done;
  input hit;
  wire [1:0] mem_bank;
  output mem_rd;
  wire mem_to_cache;
  wire mem_to_out;
  output mem_wr;
  output [15:0] memory_addr;
  output [15:0] memory_in;
  input [15:0] memory_out;
  wire [15:0] miss_addr;
  wire miss_addr_en;
  wire miss_addr_to_mem;
  input [7:0] miss_index;
  input [2:0] miss_offset;
  wire [15:0] miss_reg;
  input [4:0] miss_tag;
  wire new_addr_en;
  wire [3:0] next_state;
  wire [15:0] out_buffer;
  wire out_buffer_en;
  input rd;
  wire rd_reg;
  wire [15:0] read_buff_0;
  wire read_buff_0_en;
  wire [15:0] read_buff_1;
  wire read_buff_1_en;
  input rst;
  output stall;
  input valid;
  input wr;
  wire wr_reg;
  wire [15:0] write_buff_0;
  wire write_buff_0_en;
  wire [15:0] write_buff_1;
  wire write_buff_1_en;
  wire [15:0] write_buff_2;
  wire write_buff_2_en;
  wire [15:0] write_buff_3;
  wire write_buff_3_en;
  output ws;
  assign _038_ = _024_[0] | _025_[1];
  assign _046_ = _026_[0] | _029_[1];
  assign _048_ = addr_reg[1] | _037_[1];
  assign _047_ = _024_[0] | _030_[1];
  assign _052_ = _027_[0] | _030_[1];
  assign _043_ = addr_reg[1] | addr_reg[2];
  assign _045_ = _036_[0] | addr_reg[2];
  assign _027_[0] = curr_state[0] | _034_[1];
  assign _029_[1] = _035_[2] | curr_state[3];
  assign _051_ = _027_[0] | _029_[1];
  assign _050_ = _036_[0] | _037_[1];
  assign _039_ = _026_[0] | _025_[1];
  assign _040_ = _027_[0] | _025_[1];
  assign _041_ = _028_[0] | _025_[1];
  assign _054_ = _026_[0] | _024_[1];
  assign _055_ = _027_[0] | _024_[1];
  assign _042_ = _028_[0] | _024_[1];
  assign _044_ = _024_[0] | _029_[1];
  assign _028_[0] = _033_[0] | _034_[1];
  assign _024_[1] = curr_state[2] | curr_state[3];
  assign _024_[0] = curr_state[0] | curr_state[1];
  assign _026_[0] = _033_[0] | curr_state[1];
  assign _025_[1] = curr_state[2] | _032_[3];
  assign _049_ = _026_[0] | _030_[1];
  assign _030_[1] = _035_[2] | _032_[3];
  assign _053_ = _028_[0] | _030_[1];
  assign _031_ = _034_[1] | curr_state[2];
  assign _056_ = _031_ | curr_state[3];
  assign data_reg_to_cache = _024_[0] | _024_[1];
  assign _062_ = ~_048_;
  assign _058_ = ~_043_;
  assign _060_ = ~_045_;
  assign _063_ = ~_050_;
  assign _066_ = ~_024_[0];
  assign _068_ = ~_026_[0];
  assign _069_ = ~_027_[0];
  assign _070_ = ~_028_[0];
  assign _067_ = ~_055_;
  assign _061_ = ~_046_;
  assign write_buff_0_en = ~_038_;
  assign write_buff_1_en = ~_039_;
  assign read_buff_0_en = ~_040_;
  assign read_buff_1_en = ~_041_;
  assign buff_0_to_mem = ~_047_;
  assign buff_1_to_mem = ~_049_;
  assign _057_ = ~_042_;
  assign _071_ = ~_029_[1];
  assign _065_ = ~_054_;
  assign _072_ = ~_056_;
  assign _059_ = ~_044_;
  assign miss_addr_en = ~_025_[1];
  assign mem_wr = ~_030_[1];
  assign _064_ = ~_051_;
  assign buff_3_to_mem = ~_053_;
  assign new_addr_en = ~data_reg_to_cache;
  assign _110_[0] = _053_ ? data_in[0] : write_buff_3[0];
  assign _110_[1] = _053_ ? data_in[1] : write_buff_3[1];
  assign _110_[2] = _053_ ? data_in[2] : write_buff_3[2];
  assign _110_[3] = _053_ ? data_in[3] : write_buff_3[3];
  assign _110_[4] = _053_ ? data_in[4] : write_buff_3[4];
  assign _110_[5] = _053_ ? data_in[5] : write_buff_3[5];
  assign _110_[6] = _053_ ? data_in[6] : write_buff_3[6];
  assign _110_[7] = _053_ ? data_in[7] : write_buff_3[7];
  assign _110_[8] = _053_ ? data_in[8] : write_buff_3[8];
  assign _110_[9] = _053_ ? data_in[9] : write_buff_3[9];
  assign _110_[10] = _053_ ? data_in[10] : write_buff_3[10];
  assign _110_[11] = _053_ ? data_in[11] : write_buff_3[11];
  assign _110_[12] = _053_ ? data_in[12] : write_buff_3[12];
  assign _110_[13] = _053_ ? data_in[13] : write_buff_3[13];
  assign _110_[14] = _053_ ? data_in[14] : write_buff_3[14];
  assign _110_[15] = _053_ ? data_in[15] : write_buff_3[15];
  assign _111_[0] = _052_ ? _110_[0] : write_buff_2[0];
  assign _111_[1] = _052_ ? _110_[1] : write_buff_2[1];
  assign _111_[2] = _052_ ? _110_[2] : write_buff_2[2];
  assign _111_[3] = _052_ ? _110_[3] : write_buff_2[3];
  assign _111_[4] = _052_ ? _110_[4] : write_buff_2[4];
  assign _111_[5] = _052_ ? _110_[5] : write_buff_2[5];
  assign _111_[6] = _052_ ? _110_[6] : write_buff_2[6];
  assign _111_[7] = _052_ ? _110_[7] : write_buff_2[7];
  assign _111_[8] = _052_ ? _110_[8] : write_buff_2[8];
  assign _111_[9] = _052_ ? _110_[9] : write_buff_2[9];
  assign _111_[10] = _052_ ? _110_[10] : write_buff_2[10];
  assign _111_[11] = _052_ ? _110_[11] : write_buff_2[11];
  assign _111_[12] = _052_ ? _110_[12] : write_buff_2[12];
  assign _111_[13] = _052_ ? _110_[13] : write_buff_2[13];
  assign _111_[14] = _052_ ? _110_[14] : write_buff_2[14];
  assign _111_[15] = _052_ ? _110_[15] : write_buff_2[15];
  assign _112_[0] = _049_ ? _111_[0] : write_buff_1[0];
  assign _112_[1] = _049_ ? _111_[1] : write_buff_1[1];
  assign _112_[2] = _049_ ? _111_[2] : write_buff_1[2];
  assign _112_[3] = _049_ ? _111_[3] : write_buff_1[3];
  assign _112_[4] = _049_ ? _111_[4] : write_buff_1[4];
  assign _112_[5] = _049_ ? _111_[5] : write_buff_1[5];
  assign _112_[6] = _049_ ? _111_[6] : write_buff_1[6];
  assign _112_[7] = _049_ ? _111_[7] : write_buff_1[7];
  assign _112_[8] = _049_ ? _111_[8] : write_buff_1[8];
  assign _112_[9] = _049_ ? _111_[9] : write_buff_1[9];
  assign _112_[10] = _049_ ? _111_[10] : write_buff_1[10];
  assign _112_[11] = _049_ ? _111_[11] : write_buff_1[11];
  assign _112_[12] = _049_ ? _111_[12] : write_buff_1[12];
  assign _112_[13] = _049_ ? _111_[13] : write_buff_1[13];
  assign _112_[14] = _049_ ? _111_[14] : write_buff_1[14];
  assign _112_[15] = _049_ ? _111_[15] : write_buff_1[15];
  assign memory_in[0] = _047_ ? _112_[0] : write_buff_0[0];
  assign memory_in[1] = _047_ ? _112_[1] : write_buff_0[1];
  assign memory_in[2] = _047_ ? _112_[2] : write_buff_0[2];
  assign memory_in[3] = _047_ ? _112_[3] : write_buff_0[3];
  assign memory_in[4] = _047_ ? _112_[4] : write_buff_0[4];
  assign memory_in[5] = _047_ ? _112_[5] : write_buff_0[5];
  assign memory_in[6] = _047_ ? _112_[6] : write_buff_0[6];
  assign memory_in[7] = _047_ ? _112_[7] : write_buff_0[7];
  assign memory_in[8] = _047_ ? _112_[8] : write_buff_0[8];
  assign memory_in[9] = _047_ ? _112_[9] : write_buff_0[9];
  assign memory_in[10] = _047_ ? _112_[10] : write_buff_0[10];
  assign memory_in[11] = _047_ ? _112_[11] : write_buff_0[11];
  assign memory_in[12] = _047_ ? _112_[12] : write_buff_0[12];
  assign memory_in[13] = _047_ ? _112_[13] : write_buff_0[13];
  assign memory_in[14] = _047_ ? _112_[14] : write_buff_0[14];
  assign memory_in[15] = _047_ ? _112_[15] : write_buff_0[15];
  assign _113_[0] = data_reg_to_cache ? data_reg[0] : data_in[0];
  assign _113_[1] = data_reg_to_cache ? data_reg[1] : data_in[1];
  assign _113_[2] = data_reg_to_cache ? data_reg[2] : data_in[2];
  assign _113_[3] = data_reg_to_cache ? data_reg[3] : data_in[3];
  assign _113_[4] = data_reg_to_cache ? data_reg[4] : data_in[4];
  assign _113_[5] = data_reg_to_cache ? data_reg[5] : data_in[5];
  assign _113_[6] = data_reg_to_cache ? data_reg[6] : data_in[6];
  assign _113_[7] = data_reg_to_cache ? data_reg[7] : data_in[7];
  assign _113_[8] = data_reg_to_cache ? data_reg[8] : data_in[8];
  assign _113_[9] = data_reg_to_cache ? data_reg[9] : data_in[9];
  assign _113_[10] = data_reg_to_cache ? data_reg[10] : data_in[10];
  assign _113_[11] = data_reg_to_cache ? data_reg[11] : data_in[11];
  assign _113_[12] = data_reg_to_cache ? data_reg[12] : data_in[12];
  assign _113_[13] = data_reg_to_cache ? data_reg[13] : data_in[13];
  assign _113_[14] = data_reg_to_cache ? data_reg[14] : data_in[14];
  assign _113_[15] = data_reg_to_cache ? data_reg[15] : data_in[15];
  assign _114_[0] = mem_to_cache ? memory_out[0] : _113_[0];
  assign _114_[1] = mem_to_cache ? memory_out[1] : _113_[1];
  assign _114_[2] = mem_to_cache ? memory_out[2] : _113_[2];
  assign _114_[3] = mem_to_cache ? memory_out[3] : _113_[3];
  assign _114_[4] = mem_to_cache ? memory_out[4] : _113_[4];
  assign _114_[5] = mem_to_cache ? memory_out[5] : _113_[5];
  assign _114_[6] = mem_to_cache ? memory_out[6] : _113_[6];
  assign _114_[7] = mem_to_cache ? memory_out[7] : _113_[7];
  assign _114_[8] = mem_to_cache ? memory_out[8] : _113_[8];
  assign _114_[9] = mem_to_cache ? memory_out[9] : _113_[9];
  assign _114_[10] = mem_to_cache ? memory_out[10] : _113_[10];
  assign _114_[11] = mem_to_cache ? memory_out[11] : _113_[11];
  assign _114_[12] = mem_to_cache ? memory_out[12] : _113_[12];
  assign _114_[13] = mem_to_cache ? memory_out[13] : _113_[13];
  assign _114_[14] = mem_to_cache ? memory_out[14] : _113_[14];
  assign _114_[15] = mem_to_cache ? memory_out[15] : _113_[15];
  assign _115_[0] = buff_1_to_cache ? read_buff_1[0] : _114_[0];
  assign _115_[1] = buff_1_to_cache ? read_buff_1[1] : _114_[1];
  assign _115_[2] = buff_1_to_cache ? read_buff_1[2] : _114_[2];
  assign _115_[3] = buff_1_to_cache ? read_buff_1[3] : _114_[3];
  assign _115_[4] = buff_1_to_cache ? read_buff_1[4] : _114_[4];
  assign _115_[5] = buff_1_to_cache ? read_buff_1[5] : _114_[5];
  assign _115_[6] = buff_1_to_cache ? read_buff_1[6] : _114_[6];
  assign _115_[7] = buff_1_to_cache ? read_buff_1[7] : _114_[7];
  assign _115_[8] = buff_1_to_cache ? read_buff_1[8] : _114_[8];
  assign _115_[9] = buff_1_to_cache ? read_buff_1[9] : _114_[9];
  assign _115_[10] = buff_1_to_cache ? read_buff_1[10] : _114_[10];
  assign _115_[11] = buff_1_to_cache ? read_buff_1[11] : _114_[11];
  assign _115_[12] = buff_1_to_cache ? read_buff_1[12] : _114_[12];
  assign _115_[13] = buff_1_to_cache ? read_buff_1[13] : _114_[13];
  assign _115_[14] = buff_1_to_cache ? read_buff_1[14] : _114_[14];
  assign _115_[15] = buff_1_to_cache ? read_buff_1[15] : _114_[15];
  assign cache_in[0] = buff_0_to_cache ? read_buff_0[0] : _115_[0];
  assign cache_in[1] = buff_0_to_cache ? read_buff_0[1] : _115_[1];
  assign cache_in[2] = buff_0_to_cache ? read_buff_0[2] : _115_[2];
  assign cache_in[3] = buff_0_to_cache ? read_buff_0[3] : _115_[3];
  assign cache_in[4] = buff_0_to_cache ? read_buff_0[4] : _115_[4];
  assign cache_in[5] = buff_0_to_cache ? read_buff_0[5] : _115_[5];
  assign cache_in[6] = buff_0_to_cache ? read_buff_0[6] : _115_[6];
  assign cache_in[7] = buff_0_to_cache ? read_buff_0[7] : _115_[7];
  assign cache_in[8] = buff_0_to_cache ? read_buff_0[8] : _115_[8];
  assign cache_in[9] = buff_0_to_cache ? read_buff_0[9] : _115_[9];
  assign cache_in[10] = buff_0_to_cache ? read_buff_0[10] : _115_[10];
  assign cache_in[11] = buff_0_to_cache ? read_buff_0[11] : _115_[11];
  assign cache_in[12] = buff_0_to_cache ? read_buff_0[12] : _115_[12];
  assign cache_in[13] = buff_0_to_cache ? read_buff_0[13] : _115_[13];
  assign cache_in[14] = buff_0_to_cache ? read_buff_0[14] : _115_[14];
  assign cache_in[15] = buff_0_to_cache ? read_buff_0[15] : _115_[15];
  assign _116_[0] = buff_to_out ? out_buffer[0] : cache_out[0];
  assign _116_[1] = buff_to_out ? out_buffer[1] : cache_out[1];
  assign _116_[2] = buff_to_out ? out_buffer[2] : cache_out[2];
  assign _116_[3] = buff_to_out ? out_buffer[3] : cache_out[3];
  assign _116_[4] = buff_to_out ? out_buffer[4] : cache_out[4];
  assign _116_[5] = buff_to_out ? out_buffer[5] : cache_out[5];
  assign _116_[6] = buff_to_out ? out_buffer[6] : cache_out[6];
  assign _116_[7] = buff_to_out ? out_buffer[7] : cache_out[7];
  assign _116_[8] = buff_to_out ? out_buffer[8] : cache_out[8];
  assign _116_[9] = buff_to_out ? out_buffer[9] : cache_out[9];
  assign _116_[10] = buff_to_out ? out_buffer[10] : cache_out[10];
  assign _116_[11] = buff_to_out ? out_buffer[11] : cache_out[11];
  assign _116_[12] = buff_to_out ? out_buffer[12] : cache_out[12];
  assign _116_[13] = buff_to_out ? out_buffer[13] : cache_out[13];
  assign _116_[14] = buff_to_out ? out_buffer[14] : cache_out[14];
  assign _116_[15] = buff_to_out ? out_buffer[15] : cache_out[15];
  assign data_out[0] = mem_to_out ? memory_out[0] : _116_[0];
  assign data_out[1] = mem_to_out ? memory_out[1] : _116_[1];
  assign data_out[2] = mem_to_out ? memory_out[2] : _116_[2];
  assign data_out[3] = mem_to_out ? memory_out[3] : _116_[3];
  assign data_out[4] = mem_to_out ? memory_out[4] : _116_[4];
  assign data_out[5] = mem_to_out ? memory_out[5] : _116_[5];
  assign data_out[6] = mem_to_out ? memory_out[6] : _116_[6];
  assign data_out[7] = mem_to_out ? memory_out[7] : _116_[7];
  assign data_out[8] = mem_to_out ? memory_out[8] : _116_[8];
  assign data_out[9] = mem_to_out ? memory_out[9] : _116_[9];
  assign data_out[10] = mem_to_out ? memory_out[10] : _116_[10];
  assign data_out[11] = mem_to_out ? memory_out[11] : _116_[11];
  assign data_out[12] = mem_to_out ? memory_out[12] : _116_[12];
  assign data_out[13] = mem_to_out ? memory_out[13] : _116_[13];
  assign data_out[14] = mem_to_out ? memory_out[14] : _116_[14];
  assign data_out[15] = mem_to_out ? memory_out[15] : _116_[15];
  assign cache_tag[0] = data_reg_to_cache ? addr_reg[11] : addr_in[11];
  assign cache_tag[1] = data_reg_to_cache ? addr_reg[12] : addr_in[12];
  assign cache_tag[2] = data_reg_to_cache ? addr_reg[13] : addr_in[13];
  assign cache_tag[3] = data_reg_to_cache ? addr_reg[14] : addr_in[14];
  assign cache_tag[4] = data_reg_to_cache ? addr_reg[15] : addr_in[15];
  assign cache_index[0] = data_reg_to_cache ? addr_reg[3] : addr_in[3];
  assign cache_index[1] = data_reg_to_cache ? addr_reg[4] : addr_in[4];
  assign cache_index[2] = data_reg_to_cache ? addr_reg[5] : addr_in[5];
  assign cache_index[3] = data_reg_to_cache ? addr_reg[6] : addr_in[6];
  assign cache_index[4] = data_reg_to_cache ? addr_reg[7] : addr_in[7];
  assign cache_index[5] = data_reg_to_cache ? addr_reg[8] : addr_in[8];
  assign cache_index[6] = data_reg_to_cache ? addr_reg[9] : addr_in[9];
  assign cache_index[7] = data_reg_to_cache ? addr_reg[10] : addr_in[10];
  assign _117_[1] = _097_ ? 1'h1 : addr_reg[1];
  assign _117_[2] = _097_ ? 1'h1 : addr_reg[2];
  assign _118_[1] = _095_ ? 1'h0 : _117_[1];
  assign _118_[2] = _095_ ? 1'h1 : _117_[2];
  assign _119_[1] = _093_ ? 1'h1 : _118_[1];
  assign _119_[2] = _093_ ? 1'h0 : _118_[2];
  assign _120_[1] = _091_ ? 1'h0 : _119_[1];
  assign _120_[2] = _091_ ? 1'h0 : _119_[2];
  assign cache_offset[0] = data_reg_to_cache ? addr_reg[0] : addr_in[0];
  assign cache_offset[1] = data_reg_to_cache ? _120_[1] : addr_in[1];
  assign cache_offset[2] = data_reg_to_cache ? _120_[2] : addr_in[2];
  assign _121_[0] = _030_[1] ? addr_reg[1] : miss_reg[1];
  assign _121_[1] = _030_[1] ? addr_reg[2] : miss_reg[2];
  assign _122_[0] = _101_ ? 1'h1 : _121_[0];
  assign _122_[1] = _101_ ? 1'h1 : _121_[1];
  assign _123_[0] = _100_ ? 1'h0 : _122_[0];
  assign _123_[1] = _100_ ? 1'h1 : _122_[1];
  assign _124_[0] = _099_ ? 1'h1 : _123_[0];
  assign _124_[1] = _099_ ? 1'h0 : _123_[1];
  assign memory_addr[1] = _098_ ? 1'h0 : _124_[0];
  assign memory_addr[2] = _098_ ? 1'h0 : _124_[1];
  assign memory_addr[0] = _030_[1] ? addr_reg[0] : miss_reg[0];
  assign memory_addr[3] = _030_[1] ? addr_reg[3] : miss_reg[3];
  assign memory_addr[4] = _030_[1] ? addr_reg[4] : miss_reg[4];
  assign memory_addr[5] = _030_[1] ? addr_reg[5] : miss_reg[5];
  assign memory_addr[6] = _030_[1] ? addr_reg[6] : miss_reg[6];
  assign memory_addr[7] = _030_[1] ? addr_reg[7] : miss_reg[7];
  assign memory_addr[8] = _030_[1] ? addr_reg[8] : miss_reg[8];
  assign memory_addr[9] = _030_[1] ? addr_reg[9] : miss_reg[9];
  assign memory_addr[10] = _030_[1] ? addr_reg[10] : miss_reg[10];
  assign memory_addr[11] = _030_[1] ? addr_reg[11] : miss_reg[11];
  assign memory_addr[12] = _030_[1] ? addr_reg[12] : miss_reg[12];
  assign memory_addr[13] = _030_[1] ? addr_reg[13] : miss_reg[13];
  assign memory_addr[14] = _030_[1] ? addr_reg[14] : miss_reg[14];
  assign memory_addr[15] = _030_[1] ? addr_reg[15] : miss_reg[15];
  assign _125_[0] = ~dirty;
  assign _126_[0] = _102_ ? 1'h0 : _125_[0];
  assign _126_[3] = _102_ ? 1'h0 : dirty;
  assign _127_[2] = _052_ ? _053_ : 1'h1;
  assign buff_2_to_mem = ~_052_;
  assign _128_[0] = _049_ ? _127_[2] : 1'h0;
  assign _128_[2] = _049_ ? _127_[2] : 1'h1;
  assign _128_[3] = _049_ ? buff_2_to_mem : 1'h1;
  assign _129_[0] = _047_ ? _128_[0] : 1'h1;
  assign _129_[1] = _047_ ? _128_[2] : 1'h0;
  assign _129_[2] = _047_ ? _128_[2] : 1'h1;
  assign _129_[3] = _047_ ? _128_[3] : 1'h1;
  assign _130_[0] = _041_ ? _129_[0] : 1'h0;
  assign _130_[1] = _041_ ? _129_[1] : 1'h0;
  assign _130_[2] = _041_ ? _129_[2] : 1'h1;
  assign _130_[3] = _041_ ? _129_[3] : 1'h1;
  assign _131_[0] = _040_ ? _130_[0] : 1'h1;
  assign _131_[1] = _040_ ? _130_[1] : 1'h1;
  assign _131_[2] = _040_ ? _130_[2] : 1'h0;
  assign _131_[3] = _040_ ? _130_[3] : 1'h1;
  assign _132_[0] = _039_ ? _131_[0] : 1'h0;
  assign _132_[1] = _039_ ? _131_[1] : 1'h1;
  assign _132_[2] = _039_ ? _131_[2] : 1'h0;
  assign _132_[3] = _039_ ? _131_[3] : 1'h1;
  assign _133_[0] = _038_ ? _132_[0] : 1'h1;
  assign _133_[1] = _038_ ? _132_[1] : 1'h0;
  assign _133_[2] = _038_ ? _132_[2] : 1'h0;
  assign _133_[3] = _038_ ? _132_[3] : 1'h1;
  assign _134_[0] = _051_ ? _133_[0] : 1'h0;
  assign _134_[1] = _051_ ? _133_[1] : 1'h0;
  assign _134_[2] = _051_ ? _133_[2] : 1'h0;
  assign _134_[3] = _051_ ? _133_[3] : 1'h0;
  assign _135_[0] = _046_ ? _134_[0] : 1'h0;
  assign _135_[1] = _046_ ? _134_[1] : 1'h1;
  assign _135_[2] = _046_ ? _134_[2] : 1'h1;
  assign _135_[3] = _046_ ? _134_[3] : 1'h0;
  assign _136_[0] = _044_ ? _135_[0] : 1'h1;
  assign _136_[1] = _044_ ? _135_[1] : 1'h0;
  assign _136_[2] = _044_ ? _135_[2] : 1'h1;
  assign _136_[3] = _044_ ? _135_[3] : 1'h0;
  assign _137_[0] = _042_ ? _136_[0] : 1'h0;
  assign _137_[1] = _042_ ? _136_[1] : 1'h0;
  assign _137_[2] = _042_ ? _136_[2] : 1'h1;
  assign _137_[3] = _042_ ? _136_[3] : 1'h0;
  assign _138_[0] = _055_ ? _137_[0] : 1'h1;
  assign _138_[1] = _055_ ? _137_[1] : 1'h1;
  assign _138_[2] = _055_ ? _137_[2] : 1'h0;
  assign _138_[3] = _055_ ? _137_[3] : 1'h0;
  assign _139_[0] = _054_ ? _138_[0] : 1'h0;
  assign _139_[1] = _054_ ? _138_[1] : 1'h1;
  assign _139_[2] = _054_ ? _138_[2] : 1'h0;
  assign _139_[3] = _054_ ? _138_[3] : 1'h0;
  assign next_state[0] = data_reg_to_cache ? _139_[0] : _126_[0];
  assign next_state[1] = data_reg_to_cache ? _139_[1] : 1'h0;
  assign next_state[2] = data_reg_to_cache ? _139_[2] : 1'h0;
  assign next_state[3] = data_reg_to_cache ? _139_[3] : _126_[3];
  assign _073_ = ~wr_reg;
  assign _074_ = ~rd;
  assign _075_ = ~wr;
  assign stall = ~_022_;
  assign _076_ = _057_ | read_buff_0_en;
  assign _000_ = _076_ & _058_;
  assign _077_ = _059_ | read_buff_1_en;
  assign _001_ = _077_ & _060_;
  assign _078_ = _000_ | _001_;
  assign _079_ = _061_ | buff_0_to_mem;
  assign _002_ = _079_ & _062_;
  assign _080_ = _078_ | _002_;
  assign _003_ = buff_1_to_mem & _063_;
  assign out_buffer_en = _080_ | _003_;
  assign _004_ = _057_ & _081_;
  assign _005_ = _059_ & _082_;
  assign _083_ = _004_ | _005_;
  assign _006_ = _061_ & _084_;
  assign _085_ = _083_ | _006_;
  assign _007_ = _064_ & _086_;
  assign _087_ = _085_ | _007_;
  assign _084_ = _073_ | _048_;
  assign _008_ = buff_0_to_mem & _084_;
  assign _088_ = _087_ | _008_;
  assign _086_ = _073_ | _050_;
  assign _009_ = buff_1_to_mem & _086_;
  assign mem_to_cache = _088_ | _009_;
  assign _081_ = _073_ | _043_;
  assign buff_0_to_cache = buff_2_to_mem & _081_;
  assign _082_ = _073_ | _045_;
  assign buff_1_to_cache = buff_3_to_mem & _082_;
  assign _010_ = _064_ & rd_reg;
  assign mem_to_out = _010_ & _063_;
  assign _036_[0] = addr_reg[1] ^ 1'h1;
  assign _037_[1] = addr_reg[2] ^ 1'h1;
  assign _011_ = _064_ & _050_;
  assign _089_ = _011_ | buff_3_to_mem;
  assign buff_to_out = rd_reg & _089_;
  assign _090_ = _057_ | write_buff_0_en;
  assign _091_ = _090_ | buff_2_to_mem;
  assign _092_ = _059_ | write_buff_1_en;
  assign _093_ = _092_ | buff_3_to_mem;
  assign _094_ = _061_ | read_buff_0_en;
  assign _095_ = _094_ | buff_0_to_mem;
  assign _096_ = _064_ | read_buff_1_en;
  assign _097_ = _096_ | buff_1_to_mem;
  assign _012_ = curr_state[3] & _066_;
  assign _098_ = _065_ | _012_;
  assign _013_ = curr_state[3] & _068_;
  assign _099_ = _067_ | _013_;
  assign _014_ = curr_state[3] & _069_;
  assign _100_ = _057_ | _014_;
  assign _015_ = curr_state[3] & _070_;
  assign _101_ = _059_ | _015_;
  assign _033_[0] = curr_state[0] ^ 1'h1;
  assign _034_[1] = curr_state[1] ^ 1'h1;
  assign _035_[2] = curr_state[2] ^ 1'h1;
  assign _032_[3] = curr_state[3] ^ 1'h1;
  assign _018_ = new_addr_en & rd;
  assign cache_rd = _018_ | miss_addr_en;
  assign _019_ = new_addr_en & wr;
  assign _103_ = _019_ | _057_;
  assign _104_ = _103_ | _071_;
  assign cache_wr = _104_ | mem_wr;
  assign _020_ = buff_3_to_mem & wr_reg;
  assign _105_ = new_addr_en | _020_;
  assign _021_ = _064_ & wr_reg;
  assign comp = _105_ | _021_;
  assign _106_ = _065_ | _072_;
  assign _107_ = _106_ | _059_;
  assign mem_rd = _107_ | miss_addr_en;
  assign _016_ = _074_ & _075_;
  assign _102_ = _016_ | _017_;
  assign _022_ = new_addr_en & _102_;
  assign _109_ = cache_hit | _064_;
  assign done = _109_ | buff_3_to_mem;
  assign _108_ = rd | wr;
  assign _017_ = hit & valid;
  assign _023_ = _108_ & _017_;
  assign cache_hit = _023_ & new_addr_en;
  reg_16b addr_wait_reg (
    .clk(clk),
    .inData(addr_in),
    .outData(addr_reg),
    .rst(rst),
    .writeEn(new_addr_en)
  );
  reg_16b data_in_reg (
    .clk(clk),
    .inData(data_in),
    .outData(data_reg),
    .rst(rst),
    .writeEn(new_addr_en)
  );
  reg_16b miss_wait_reg (
    .clk(clk),
    .inData({ miss_tag, miss_index, miss_offset }),
    .outData(miss_reg),
    .rst(rst),
    .writeEn(miss_addr_en)
  );
  reg_16b out_buffer_reg (
    .clk(clk),
    .inData(memory_out),
    .outData(out_buffer),
    .rst(rst),
    .writeEn(out_buffer_en)
  );
  reg_16b read_buffer_0_reg (
    .clk(clk),
    .inData(memory_out),
    .outData(read_buff_0),
    .rst(rst),
    .writeEn(read_buff_0_en)
  );
  reg_16b read_buffer_1_reg (
    .clk(clk),
    .inData(memory_out),
    .outData(read_buff_1),
    .rst(rst),
    .writeEn(read_buff_1_en)
  );
  reg_1b read_reg (
    .clk(clk),
    .inData(rd),
    .outData(rd_reg),
    .rst(rst),
    .writeEn(new_addr_en)
  );
  reg_4b state_reg (
    .clk(clk),
    .inData(next_state),
    .outData(curr_state),
    .rst(rst),
    .writeEn(1'h1)
  );
  reg_16b write_buffer_0_reg (
    .clk(clk),
    .inData(cache_out),
    .outData(write_buff_0),
    .rst(rst),
    .writeEn(write_buff_0_en)
  );
  reg_16b write_buffer_1_reg (
    .clk(clk),
    .inData(cache_out),
    .outData(write_buff_1),
    .rst(rst),
    .writeEn(write_buff_1_en)
  );
  reg_16b write_buffer_2_reg (
    .clk(clk),
    .inData(cache_out),
    .outData(write_buff_2),
    .rst(rst),
    .writeEn(read_buff_0_en)
  );
  reg_16b write_buffer_3_reg (
    .clk(clk),
    .inData(cache_out),
    .outData(write_buff_3),
    .rst(rst),
    .writeEn(read_buff_1_en)
  );
  reg_1b write_reg (
    .clk(clk),
    .inData(wr),
    .outData(wr_reg),
    .rst(rst),
    .writeEn(new_addr_en)
  );
  assign addr_in_to_cache = new_addr_en;
  assign mem_bank = memory_addr[2:1];
  assign miss_addr = { miss_tag, miss_index, miss_offset };
  assign miss_addr_to_mem = mem_wr;
  assign write_buff_2_en = read_buff_0_en;
  assign write_buff_3_en = read_buff_1_en;
  assign ws = new_addr_en;
endmodule
