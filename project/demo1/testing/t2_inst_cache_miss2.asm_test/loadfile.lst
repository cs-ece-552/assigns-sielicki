          // CS552 2008 student tests
          // Original Authors: Matt Sinclair, Amy Zou, Ju shin Lee
          
          // Author: Matt Sinclair
          // CS/ECE 552 Spring '08
          // Demo III Test File
          //
          // Filename: inst_cache_miss2.asm
          // Instruction Cache Miss Test
          //
          // This is a test of the instruction cache.  It is designed to show how the
          // instruction cache works for an instruction that has misses.  Here, it is expected
          // that there will need to be an eviction (but since we don't write to it it doesn't
          // get written back).
          
0000 201e j	.realStart		// also a flush (i cache miss) (way 0)
0002 c0ff LBI	r0, -1			// i cache hit (even though it is flushed) (way 0)
0004 c1ff LBI	r1, -1			// i cache hit (even though it is flushed) (way 0)
0006 c2ff LBI	r2, -1
0008 c3ff LBI	r3, -1
000a c4ff LBI	r4, -1
000c c5ff LBI	r5, -1
000e c6ff LBI	r6, -1
0010 c7ff LBI	r7, -1	
0012 0000 halt
0014 0000 halt
0016 0000 halt
0018 0000 halt
001a 0000 halt
001c 0000 	halt
001e 0000 	halt
          	
          	
          // initialize all registers to 0
0020      .realStart:
0020 c000 LBI	r0, 0			// i cache miss (way 1)
0022 c100 LBI	r1, 0			// i cache hit  (way 1)
0024 c200 LBI	r2, 0			// i cache hit  (way 1) ...** actually misses?
0026 c300 LBI	r3, 0			// i cache hit	(way 1)
0028 c400 LBI	r4, 0			// i cache miss (eviction?)
002a c500 LBI	r5, 0			// i cache hit
002c c600 LBI	r6, 0			// i cache hit
002e c700 LBI	r7, 0			// i cache hit
          
0030 4924 addi	r1, r1, 4		// i cache miss
0032 4a45 addi	r2, r2, 5		// i cache hit 
0034 5b7f xori	r3, r3, 31		// i cache hit 
0036 f350 sle	r4, r3, r2		// i cache hit
          
0038 0000 halt				// i cache miss
003a 0000 halt				// doesn't execute
003c 27e2 j	.realStart		// should never execute
          // 11/16 i cache hits
          // 0/0 d cache hits
